/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  MockERC721,
  MockERC721Interface,
} from "../../../contracts/mocks/MockERC721";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080346200030b576001600160401b039060409080820183811182821017620002f55782526007815260209266135bd8dad3919560ca1b84830152825183810181811083821117620002f557845260048152631353919560e21b85820152825190828211620002f55760008054926001958685811c95168015620002ea575b89861014620002d6578190601f9586811162000283575b5089908683116001146200021f57849262000213575b5050600019600383901b1c191690861b1781555b8151938411620001ff5784548581811c91168015620001f4575b88821014620001e05783811162000198575b5086928411600114620001325783949596509262000126575b5050600019600383901b1c191690821b1790555b51610d149081620003118239f35b01519050388062000104565b9190601f1984169685845280842093905b88821062000180575050838596971062000166575b505050811b01905562000118565b015160001960f88460031b161c1916905538808062000158565b80878596829496860151815501950193019062000143565b8582528782208480870160051c8201928a8810620001d6575b0160051c019086905b828110620001ca575050620000eb565b838155018690620001ba565b92508192620001b1565b634e487b7160e01b82526022600452602482fd5b90607f1690620000d9565b634e487b7160e01b81526041600452602490fd5b015190503880620000ab565b8480528a85208994509190601f198416865b8d8282106200026c575050841162000252575b505050811b018155620000bf565b015160001960f88460031b161c1916905538808062000244565b8385015186558c9790950194938401930162000231565b9091508380528984208680850160051c8201928c8610620002cc575b918a91869594930160051c01915b828110620002bd57505062000095565b8681558594508a9101620002ad565b925081926200029f565b634e487b7160e01b83526022600452602483fd5b94607f16946200007e565b634e487b7160e01b600052604160045260246000fd5b600080fdfe608060408181526004918236101561001657600080fd5b600092833560e01c91826301ffc9a71461082e5750816306fdde0314610763578163081812fc14610727578163095ea7b31461064a57816323b872dd1461063257816340c10f191461052957816342842e0e1461050057816342966c681461043b5781636352211e1461040a57816370a08231146103b557816395d89b411461029c578163a22cb465146101fa578163b88d4fde1461016c578163c87b56dd1461011a575063e985e9c5146100ca57600080fd5b3461011657806003193601126101165760ff816020936100e86108d9565b6100f06108f4565b6001600160a01b0391821683526005875283832091168252855220549151911615158152f35b5080fd5b8383346101165760203660031901126101165761013a6101689335610ca3565b508181516101478161093f565b528051916101548361093f565b825251918291602083526020830190610899565b0390f35b919050346101f65760803660031901126101f6576101886108d9565b6101906108f4565b846064359467ffffffffffffffff8611610116573660238701121561011657850135946101c86101bf87610993565b95519586610971565b858552366024878301011161011657856101f396602460209301838801378501015260443591610b4e565b80f35b8280fd5b919050346101f657806003193601126101f6576102156108d9565b9060243591821515809303610298576001600160a01b03169283156102835750338452600560205280842083855260205280842060ff1981541660ff8416179055519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a380f35b836024925191630b61174360e31b8352820152fd5b8480fd5b8284346103b257806003193601126103b2578151918160019283549384811c918186169586156103a8575b6020968785108114610395578899509688969785829a52918260001461036e575050600114610313575b5050506101689291610304910385610971565b51928284938452830190610899565b91908693508083527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b82841061035657505050820101816103046101686102f1565b8054848a01860152889550879490930192810161033d565b60ff19168782015293151560051b86019093019350849250610304915061016890506102f1565b634e487b7160e01b835260228a52602483fd5b92607f16926102c7565b80fd5b8284346103b25760203660031901126103b2576001600160a01b036103d86108d9565b169283156103f55750806020938392526003845220549051908152f35b91516322718ad960e21b815291820152602490fd5b8284346103b25760203660031901126103b2575061042a60209235610ca3565b90516001600160a01b039091168152f35b919050346101f65760203660031901126101f657813590818452600260205260018060a01b038185205416828582159283156104cc575b828252600260205284822080546001600160a01b03191690557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8280a46104b7578380f35b51637e27328960e01b81529182015260249150fd5b600083815260046020526040902080546001600160a01b031916905580825260036020528482208054600019019055610472565b505034610116576101f3906105143661090a565b919251926105218461093f565b858452610b4e565b919050346101f657806003193601126101f6576105446108d9565b6001600160a01b039081169060243590821561061b57818652600260205283862054169182151592836105e7575b8187526003602052848720600181540190558287526002602052848720826bffffffffffffffffffffffff60a01b8254161790557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8780a46105d2578280f35b9160249251916339e3563760e11b8352820152fd5b600083815260046020526040902080546001600160a01b031916905580875260036020528487208054600019019055610572565b8351633250574960e11b8152808601879052602490fd5b83346103b2576101f36106443661090a565b916109af565b919050346101f657806003193601126101f6576106656108d9565b9160243561067281610ca3565b33151580610714575b806106eb575b6106d5576001600160a01b039485169482918691167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258880a48452602052822080546001600160a01b031916909117905580f35b835163a9fbf51f60e01b81523381850152602490fd5b506001600160a01b03811686526005602090815284872033885290528386205460ff1615610681565b506001600160a01b03811633141561067b565b9050346101f65760203660031901126101f65791826020933561074981610ca3565b50825283528190205490516001600160a01b039091168152f35b8284346103b257806003193601126103b25781519181825492600184811c91818616958615610824575b6020968785108114610395578899509688969785829a52918260001461036e5750506001146107c9575050506101689291610304910385610971565b91908693508280527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b82841061080c57505050820101816103046101686102f1565b8054848a0186015288955087949093019281016107f3565b92607f169261078d565b8491346101f65760203660031901126101f6573563ffffffff60e01b81168091036101f657602092506380ac58cd60e01b8114908115610888575b8115610877575b5015158152f35b6301ffc9a760e01b14905083610870565b635b5e139f60e01b81149150610869565b919082519283825260005b8481106108c5575050826000602080949584010152601f8019910116010190565b6020818301810151848301820152016108a4565b600435906001600160a01b03821682036108ef57565b600080fd5b602435906001600160a01b03821682036108ef57565b60609060031901126108ef576001600160a01b039060043582811681036108ef579160243590811681036108ef579060443590565b6020810190811067ffffffffffffffff82111761095b57604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff82111761095b57604052565b67ffffffffffffffff811161095b57601f01601f191660200190565b6001600160a01b039182169290918315610b3557600092828452826020956002875260409684888820541696879133151580610a9f575b509060027fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9284610a6c575b858352600381528b8320805460010190558683525289812080546001600160a01b0319168517905580a41692838303610a4b5750505050565b6064945051926364283d7b60e01b8452600484015260248301526044820152fd5b600087815260046020526040902080546001600160a01b0319169055848352600381528b83208054600019019055610a12565b91939450915080610af4575b15610abb578592918791386109e6565b878688610ad8576024915190637e27328960e01b82526004820152fd5b604491519063177e802f60e01b82523360048301526024820152fd5b503387148015610b19575b80610aab5750858252600481523385898420541614610aab565b5086825260058152878220338352815260ff8883205416610aff565b604051633250574960e11b815260006004820152602490fd5b929092610b5c8385836109af565b833b610b69575b50505050565b604051630a85bd0160e11b8082523360048301526001600160a01b0392831660248301526044820194909452608060648201529493169260209290918590610bb5906084830190610899565b039483816000978189895af1869181610c5f575b50610c2a575050503d600014610c21573d610be381610993565b90610bf16040519283610971565b81528093823d92013e5b82519283610c1c57604051633250574960e11b815260048101849052602490fd5b019050fd5b60609250610bfb565b919450915063ffffffff60e01b1603610c47575038808080610b63565b60249060405190633250574960e11b82526004820152fd5b9091508481813d8311610c9c575b610c778183610971565b81010312610c9857516001600160e01b031981168103610c98579038610bc9565b8680fd5b503d610c6d565b6000818152600260205260409020546001600160a01b0316908115610cc6575090565b60249060405190637e27328960e01b82526004820152fdfea26469706673582212203fdd87f9f4b3a9e979b55563b13ab53925787965ae173fe8e417e9e993b6ef4664736f6c63430008140033";

type MockERC721ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockERC721ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockERC721__factory extends ContractFactory {
  constructor(...args: MockERC721ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MockERC721 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockERC721__factory {
    return super.connect(runner) as MockERC721__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockERC721Interface {
    return new Interface(_abi) as MockERC721Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): MockERC721 {
    return new Contract(address, _abi, runner) as unknown as MockERC721;
  }
}
