/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  MockERC721,
  MockERC721Interface,
} from "../../../contracts/mocks/MockERC721";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608080604052346200031e57620000168162000323565b60078152602066135bd8dad3919560ca1b81830152604051916200003a8362000323565b60048352631353919560e21b8284015280516001600160401b0390818111620003085760008054916001948584811c94168015620002fd575b87851014620002e9578190601f9485811162000296575b5087908583116001146200023257849262000226575b5050600019600383901b1c191690851b1781555b8551928311620002125783548481811c9116801562000207575b86821014620001f357828111620001ab575b508491831160011462000143579062000127958362000137575b5050600019600383901b1c191690821b1790555b60405190674cbcbe132cc7cdd581830152815262000323565b604051610dc79081620003408239f35b015190503880620000fa565b9194601f198616848452858420935b8181106200019557509184939187620001279894106200017b575b505050811b0190556200010e565b015160001960f88460031b161c191690553880806200016d565b8284015185559385019392860192860162000152565b8482528582208380860160051c820192888710620001e9575b0160051c019085905b828110620001dd575050620000e0565b838155018590620001cd565b92508192620001c4565b634e487b7160e01b82526022600452602482fd5b90607f1690620000ce565b634e487b7160e01b81526041600452602490fd5b015190503880620000a0565b8480528885208894509190601f198416865b8b8282106200027f575050841162000265575b505050811b018155620000b4565b015160001960f88460031b161c1916905538808062000257565b8385015186558b9790950194938401930162000244565b9091508380528784208580850160051c8201928a8610620002df575b918991869594930160051c01915b828110620002d05750506200008a565b868155859450899101620002c0565b92508192620002b2565b634e487b7160e01b83526022600452602483fd5b93607f169362000073565b634e487b7160e01b600052604160045260246000fd5b600080fd5b604081019081106001600160401b03821117620003085760405256fe608060408181526004918236101561001657600080fd5b600092833560e01c91826301ffc9a7146108c55750816306fdde03146107fa578163081812fc146107be578163095ea7b3146106e157816323b872dd146106c957816340c10f191461057c57816342842e0e1461055357816342966c681461043b5781636352211e1461040a57816370a08231146103b557816395d89b411461029c578163a22cb465146101fa578163b88d4fde1461016c578163c87b56dd1461011a575063e985e9c5146100ca57600080fd5b3461011657806003193601126101165760ff816020936100e8610970565b6100f061098b565b6001600160a01b0391821683526005875283832091168252855220549151911615158152f35b5080fd5b8383346101165760203660031901126101165761013a6101689335610d56565b5081815161014781610a08565b5280519161015483610a08565b825251918291602083526020830190610930565b0390f35b919050346101f65760803660031901126101f657610188610970565b61019061098b565b846064359467ffffffffffffffff8611610116573660238701121561011657850135946101c86101bf87610a46565b95519586610a24565b858552366024878301011161011657856101f396602460209301838801378501015260443591610c01565b80f35b8280fd5b919050346101f657806003193601126101f657610215610970565b9060243591821515809303610298576001600160a01b03169283156102835750338452600560205280842083855260205280842060ff1981541660ff8416179055519081527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a380f35b836024925191630b61174360e31b8352820152fd5b8480fd5b8284346103b257806003193601126103b2578151918160019283549384811c918186169586156103a8575b6020968785108114610395578899509688969785829a52918260001461036e575050600114610313575b5050506101689291610304910385610a24565b51928284938452830190610930565b91908693508083527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b82841061035657505050820101816103046101686102f1565b8054848a01860152889550879490930192810161033d565b60ff19168782015293151560051b86019093019350849250610304915061016890506102f1565b634e487b7160e01b835260228a52602483fd5b92607f16926102c7565b80fd5b8284346103b25760203660031901126103b2576001600160a01b036103d8610970565b169283156103f55750806020938392526003845220549051908152f35b91516322718ad960e21b815291820152602490fd5b8284346103b25760203660031901126103b2575061042a60209235610d56565b90516001600160a01b039091168152f35b919050346101f6576020908160031936011261054f5782359161046e8251672077588a21b8aa7f838201528281526109d6565b610488825167e9031be6f6ce6dc1838201528281526109d6565b6104a2825167e94feb7dfe6eaea0838201528281526109d6565b8285526002808252828620546001600160a01b03168015928592889291851561051c575b8484525284822080546001600160a01b03191690557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8280a4610507578380f35b51637e27328960e01b81529182015260249150fd5b600085815260046020526040902080546001600160a01b03191690558284526003815286842080546000190190556104c6565b8380fd5b505034610116576101f390610567366109a1565b9192519261057484610a08565b858452610c01565b919050346101f657806003193601126101f657610597610970565b6024358251916105b8602093674d79f254d5bdafdf858201528481526109d6565b6105d284516748d875926de33972858201528481526109d6565b6105ec8451674ab80103d053a9e9858201528481526109d6565b6001600160a01b039081169081156106b2578287526002845284872054166002811515948561067f575b83895260038152868920805460010190558489525284872080546001600160a01b031916831790557fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8780a461066a578280f35b9160249251916339e3563760e11b8352820152fd5b600085815260046020526040902080546001600160a01b0319169055828952600381528689208054600019019055610616565b8451633250574960e11b8152808701889052602490fd5b83346103b2576101f36106db366109a1565b91610a62565b919050346101f657806003193601126101f6576106fc610970565b9160243561070981610d56565b331515806107ab575b80610782575b61076c576001600160a01b039485169482918691167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9258880a48452602052822080546001600160a01b031916909117905580f35b835163a9fbf51f60e01b81523381850152602490fd5b506001600160a01b03811686526005602090815284872033885290528386205460ff1615610718565b506001600160a01b038116331415610712565b9050346101f65760203660031901126101f6579182602093356107e081610d56565b50825283528190205490516001600160a01b039091168152f35b8284346103b257806003193601126103b25781519181825492600184811c918186169586156108bb575b6020968785108114610395578899509688969785829a52918260001461036e575050600114610860575050506101689291610304910385610a24565b91908693508280527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b8284106108a357505050820101816103046101686102f1565b8054848a01860152889550879490930192810161088a565b92607f1692610824565b8491346101f65760203660031901126101f6573563ffffffff60e01b81168091036101f657602092506380ac58cd60e01b811490811561091f575b811561090e575b5015158152f35b6301ffc9a760e01b14905083610907565b635b5e139f60e01b81149150610900565b919082519283825260005b84811061095c575050826000602080949584010152601f8019910116010190565b60208183018101518483018201520161093b565b600435906001600160a01b038216820361098657565b600080fd5b602435906001600160a01b038216820361098657565b6060906003190112610986576001600160a01b0390600435828116810361098657916024359081168103610986579060443590565b6040810190811067ffffffffffffffff8211176109f257604052565b634e487b7160e01b600052604160045260246000fd5b6020810190811067ffffffffffffffff8211176109f257604052565b90601f8019910116810190811067ffffffffffffffff8211176109f257604052565b67ffffffffffffffff81116109f257601f01601f191660200190565b6001600160a01b039182169290918315610be857600092828452826020956002875260409684888820541696879133151580610b52575b509060027fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9284610b1f575b858352600381528b8320805460010190558683525289812080546001600160a01b0319168517905580a41692838303610afe5750505050565b6064945051926364283d7b60e01b8452600484015260248301526044820152fd5b600087815260046020526040902080546001600160a01b0319169055848352600381528b83208054600019019055610ac5565b91939450915080610ba7575b15610b6e57859291879138610a99565b878688610b8b576024915190637e27328960e01b82526004820152fd5b604491519063177e802f60e01b82523360048301526024820152fd5b503387148015610bcc575b80610b5e5750858252600481523385898420541614610b5e565b5086825260058152878220338352815260ff8883205416610bb2565b604051633250574960e11b815260006004820152602490fd5b929092610c0f838583610a62565b833b610c1c575b50505050565b604051630a85bd0160e11b8082523360048301526001600160a01b0392831660248301526044820194909452608060648201529493169260209290918590610c68906084830190610930565b039483816000978189895af1869181610d12575b50610cdd575050503d600014610cd4573d610c9681610a46565b90610ca46040519283610a24565b81528093823d92013e5b82519283610ccf57604051633250574960e11b815260048101849052602490fd5b019050fd5b60609250610cae565b919450915063ffffffff60e01b1603610cfa575038808080610c16565b60249060405190633250574960e11b82526004820152fd5b9091508481813d8311610d4f575b610d2a8183610a24565b81010312610d4b57516001600160e01b031981168103610d4b579038610c7c565b8680fd5b503d610d20565b6000818152600260205260409020546001600160a01b0316908115610d79575090565b60249060405190637e27328960e01b82526004820152fdfea26469706673582212204d9f9e977494b38545b0e603b37e09e5295f0d329b96157fdfbc72a977e01ee164736f6c63430008140033";

type MockERC721ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockERC721ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockERC721__factory extends ContractFactory {
  constructor(...args: MockERC721ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      MockERC721 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): MockERC721__factory {
    return super.connect(runner) as MockERC721__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockERC721Interface {
    return new Interface(_abi) as MockERC721Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): MockERC721 {
    return new Contract(address, _abi, runner) as unknown as MockERC721;
  }
}
