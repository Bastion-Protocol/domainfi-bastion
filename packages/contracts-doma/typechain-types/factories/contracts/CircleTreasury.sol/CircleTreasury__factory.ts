/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  CircleTreasury,
  CircleTreasuryInterface,
} from "../../../contracts/CircleTreasury.sol/CircleTreasury";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_usdc",
        type: "address",
      },
      {
        internalType: "address",
        name: "_adapter",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_signers",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "_required",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "EnforcedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "ExpectedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAdapter",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSigners",
    type: "error",
  },
  {
    inputs: [],
    name: "NotEnoughApprovals",
    type: "error",
  },
  {
    inputs: [],
    name: "NotSigner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ProposalAlreadyExecuted",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "by",
        type: "address",
      },
    ],
    name: "EmergencyPaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "by",
        type: "address",
      },
    ],
    name: "EmergencyUnpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "signer",
        type: "address",
      },
    ],
    name: "ProposalApproved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "auctionId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "minAmountOut",
        type: "uint256",
      },
    ],
    name: "ProposalCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "ProposalExecuted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "approveProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "auctionAdapter",
    outputs: [
      {
        internalType: "contract IAuctionAdapter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "auctionId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minAmountOut",
        type: "uint256",
      },
    ],
    name: "createProposal",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "executeProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getSigners",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isSigner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proposalCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "proposals",
    outputs: [
      {
        internalType: "uint256",
        name: "auctionId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minAmountOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "approvals",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "executed",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "requiredSignatures",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_adapter",
        type: "address",
      },
    ],
    name: "setAuctionAdapter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "signers",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "usdc",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a0604090808252346200042f5762002412803803809162000022828562000466565b833981016080828203126200042f576200003c826200048a565b6020916200004c8385016200048a565b8486015190926001600160401b039290918381116200042f5786019581601f880112156200042f5786519184831162000434578260051b9789519362000095898b018662000466565b84528784019088829a8201019283116200042f5788809101915b83831062000414575050505060600151953315620003fc5760008054336001600160a01b0319808316821784558b51986001600160a01b03979496949193909288929183167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08980a36200013860019a8b805567ef96e9c8e6b133598d8201528c81526200044a565b620001548d51678533343aaf215f6e8d8201528c81526200044a565b620001708d5167a3a7df93c2ef5bb28d8201528c81526200044a565b6200018c8d516726bb135c0d969e498d8201528c81526200044a565b1680151580620003f0575b15620003bd57620001b98c5167783028e9e2520b958c8201528b81526200044a565b620001d58c516703d935a3ebaf68aa8c8201528b81526200044a565b620001f18c5167e52f871323007b5b8c8201528b81526200044a565b6200020d8c5167a2db9c91f1c690378c8201528b81526200044a565b8a8451101580620003b3575b156200037d579086916200023e8d516705e9a9e0e38cb42b8d8201528c81526200044a565b6200025a8d5167a037ca5dfb5d6b058d8201528c81526200044a565b608052620002798c51671fc85a4ff875d4aa8c8201528b81526200044a565b169060025416176002556200029f89516770ea12774844eb99898201528881526200044a565b5193841162000369576801000000000000000084116200036957600354846003558085106200033e575b509160038252858220915b8481106200032a578888620002fb898351906743de48544b999c828183015281526200044a565b60045551611f729081620004a082396080518181816102cc015281816105c801528181611555015261199a0152f35b8351821683820155928601928501620002d4565b60038352858588852092830192015b8281106200035d575050620002c9565b8481550186906200034d565b634e487b7160e01b82526041600452602482fd5b8b5162461bcd60e51b8152600481018b9052600f60248201526e496e76616c6964207369676e65727360881b6044820152606490fd5b508a151562000219565b8b5162461bcd60e51b8152600481018b9052600c60248201526b5a65726f206164647265737360a01b6044820152606490fd5b50868216151562000197565b8751631e4fbdf760e01b815260006004820152602490fd5b819062000421846200048a565b8152019101908890620000af565b600080fd5b634e487b7160e01b600052604160045260246000fd5b604081019081106001600160401b038211176200043457604052565b601f909101601f19168101906001600160401b038211908210176200043457604052565b51906001600160a01b03821682036200042f5756fe608060408181526004908136101561001657600080fd5b600092833560e01c908163013cf08b14611bea575080630d61b519146115c55780632079fb9a146115845780633e413bee146115405780633f4ba83a146113f25780635c975abb146113cd578063715018a614611373578063722c517614610f5b5780637df73e2714610f2c5780638456cb5914610ded5780638d06804314610dcf5780638da5cb5b14610da757806394cf795e14610c9457806398951b56146107ea578063a98998ac146107c1578063af26f9591461068f578063b6b55f2514610450578063da35c6641461042d578063f2fde38b1461039c5763f3fef3a31461010057600080fd5b34610398578060031936011261039857610118611c8c565b91602435918381519261013c60209467af9265fe84e49dda86820152858152611cd3565b610144611ca7565b61015e8351675e68fe42fbc7de1686820152858152611cd3565b610178835167bbb6ae43c50f58c686820152858152611cd3565b610180611d79565b61019a835167d9defa9ef58cc71886820152858152611cd3565b6101b483516702dec4a38eea525986820152858152611cd3565b6101bc611d9a565b6101d6835167d12ed81716ab7c5886820152858152611cd3565b6101f083516712ed19287034b9f486820152858152611cd3565b61020a835167732067e7dd102eef86820152858152611cd3565b61022483516775ba9cb3ccd6d08086820152858152611cd3565b61023e83516793636595ce02a5b386820152858152611cd3565b610249851515611d27565b610263835167c842328a3952d32586820152858152611cd3565b61027d8351670fd6dfef6e5c154986820152858152611cd3565b610297835167abf7d163b4e4285186820152858152611cd3565b825163a9059cbb60e01b81526001600160a01b039687169181019182526020820186905295929084908790819003604001818a7f000000000000000000000000000000000000000000000000000000000000000088165af195861561038e577f884edad9ce6fa2440d8a54cc123490eb96d2768479d49ff9c7366125a94243649596610361575b5061033981516756a0d84a846b51a386820152858152611cd3565b610353815167bce0ab140bce2b1b86820152858152611cd3565b519485521692a26001805580f35b61038090853d8711610387575b6103788183611d05565b810190611d61565b503861031e565b503d61036e565b81513d89823e3d90fd5b8280fd5b509034610398576020366003190112610398576103b7611c8c565b906103c0611ca7565b6001600160a01b03918216928315610417575050600054826bffffffffffffffffffffffff60a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b51631e4fbdf760e01b8152908101849052602490fd5b83823461044c578160031936011261044c576020906006549051908152f35b5080fd5b50346103985760208060031936011261068b57823591610480815167dc00b5948d639c7c84820152838152611cd3565b610488611d79565b6104a281516783a0df962efa133584820152838152611cd3565b6104bc815167fe3cb93289d84d6d84820152838152611cd3565b6104c4611d9a565b6104de815167bb2e09e963e4ca9584820152838152611cd3565b6104f88151672befd47b2c1cb4aa84820152838152611cd3565b610512815167cfa03d76677e518b84820152838152611cd3565b61052c815167b3443f941f7abbb384820152838152611cd3565b610546815167e02a99f913c17d0d84820152838152611cd3565b610551831515611d27565b61056b81516730886e72d4856b2c84820152838152611cd3565b61058581516798f74adda1771ffb84820152838152611cd3565b61059f815167baf6bfb2896ee92184820152838152611cd3565b80516323b872dd60e01b81523394810194909452306024850152604484018390528184606481887f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03165af1938415610681577fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c9394610664575b5061063c815167c5b9beb8e45bfdd884820152838152611cd3565b61065681516792679c65b40d3cf184820152838152611cd3565b519283523392a26001805580f35b61067a90833d8511610387576103788183611d05565b5038610621565b81513d87823e3d90fd5b8380fd5b5082346107be57602090816003193601126107be576106ac611c8c565b6106c6845167a1fc51f119b2ea7885820152848152611cd3565b6106ce611ca7565b6106e884516748978f4aed5a853185820152848152611cd3565b610702845167cc3f25e04387990d85820152848152611cd3565b61071c845167d8b5c32a31d03b4085820152848152611cd3565b6107368451670f10b09cd1c0019985820152848152611cd3565b6001600160a01b03168061076e5750506107619082519067c3919bfa2e1d5537818301528152611cd3565b5163fbf66df160e01b8152fd5b6107a3838561078d815167813764c9df35b50184820152838152611cd3565b5190675044c3475793b5b5818301528152611cd3565b6bffffffffffffffffffffffff60a01b600254161760025580f35b80fd5b83823461044c578160031936011261044c5760025490516001600160a01b039091168152602090f35b50346103985760208060031936011261068b57823561081983516729b2fdc2a3e518fd84820152838152611cd3565b610833835167217f825567dd4ce584820152838152611cd3565b61084d835167906db78850351ddb84820152838152611cd3565b610867835167ed0ce3344d925b3684820152838152611cd3565b846108828451679dbc648f1dd127c185820152848152611cd3565b61089c845167b0eecaa2e40a0f9685820152848152611cd3565b85906003918254905b818110610bc0575b50506108c9855167828140344ae6ac3086820152858152611cd3565b6108e3855167a1e4e5fcfa86421e86820152858152611cd3565b6109115750506109049082519067e2c26213ff8fc39d818301528152611cd3565b5163143606b960e31b8152fd5b61092b8451679c03d81f070184b885820152848152611cd3565b610945845167e10792666d87c39d85820152848152611cd3565b61095f845167742bd0bfd0fb7edb85820152848152611cd3565b610979845167bd6d14128dd43b0f85820152848152611cd3565b610981611d79565b61099b8451676442bf7bb40cef2685820152848152611cd3565b6109b58451677994992ac44e987785820152848152611cd3565b6109cf8451677beb9890add1aa4685820152848152611cd3565b6109e9845167cefed25a7616e1f185820152848152611cd3565b81865260058352838620610a0d855167598e867ad8734e5186820152858152611cd3565b610a278551678ae19d98a12e93c786820152858152611cd3565b8086015460ff1615610a5e57505050610a519082519067658b64d0227073d4818301528152611cd3565b516351618d5360e01b8152fd5b610a788551678202605fa7264cd386820152858152611cd3565b610a928551677dbeb111a1e1c59086820152858152611cd3565b610aac85516760a34d49530ddc2786820152858152611cd3565b600581013360005280855260ff866000205416600014610af0578686610ae3878251906798fa3cb43a910a17818301528152611cd3565b5163080fc0bd60e11b8152fd5b85939650610b11610b97965167b70dc4fa2388f1bc87820152868152611cd3565b610b2b84516733f0a9e1092d31bc87820152868152611cd3565b33600052845282600020600160ff19825416179055610b5a8351674f8ea6ac0848f9a986820152858152611cd3565b01610b658154611dbd565b9055610b8181516703bd23d79a9cf46f84820152838152611cd3565b5190676a788c452c89e400818301528152611cd3565b33907f049c28adfe50bcf1b76fd95273b6a24566b9f377e52fddc653c3355248dad07a8380a380f35b610bda87516747dc53ec3900a38788820152878152611cd3565b610bf487516745ccc729455370bd88820152878152611cd3565b610bfd81611c3f565b905490851b1c6001600160a01b03163303610c6c57505050610c2f845167f9d1296aa99f883a85820152848152611cd3565b610c498451673701aa2592a9a04f85820152848152611cd3565b6001610c6585516710fae94e044a933986820152858152611cd3565b38806108ad565b610c8f90610c8a8851673337104e0fa2a7c989820152888152611cd3565b611dbd565b6108a5565b5082346107be57806003193601126107be5790805191610cc560209367e99d8891a60325be85820152848152611cd3565b610cdf8251678af0bf4688ebf08785820152848152611cd3565b610cf982516796f2fc6b5cf4354885820152848152611cd3565b815190818460035493848152018093600384527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b90845b818110610d8a5750505081610d46910382611d05565b83519485948186019282875251809352850193925b828110610d6a57505050500390f35b83516001600160a01b031685528695509381019392810192600101610d5b565b82546001600160a01b031684529288019260019283019201610d30565b83823461044c578160031936011261044c57905490516001600160a01b039091168152602090f35b50903461039857826003193601126103985760209250549051908152f35b83823461044c578160031936011261044c5780610f04915190610e2160209267907487016fa0ddf884820152838152611cd3565b610e29611ca7565b610e43815167cec2fbc65295366784820152838152611cd3565b610e5d8151676cfbba97218f785a84820152838152611cd3565b610e77815167edb4c707ed4c86e484820152838152611cd3565b610e91815167f5bdcd359ff06ae084820152838152611cd3565b610e99611d79565b835460ff60a01b1916600160a01b17845580513381527f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258908390a1610eee815167e7f3fb1219ba850d84820152838152611cd3565b519067a5dcebc499b4979b818301528152611cd3565b337fb8fad2fa0ed7a383e747c309ef2c4391d7b65592a48893e57ccc1fab707914568280a280f35b83823461044c57602036600319011261044c57602090610f52610f4d611c8c565b611de2565b90519015158152f35b5082346107be5760603660031901126107be57823560243560443591845193610f9560209567e52b12b5373b721687820152868152611cd3565b610faf865167217f825567dd4ce587820152868152611cd3565b610fc9865167906db78850351ddb87820152868152611cd3565b610fe3865167ed0ce3344d925b3687820152868152611cd3565b80610ffe8751679dbc648f1dd127c188820152878152611cd3565b611018875167b0eecaa2e40a0f9688820152878152611cd3565b8160038054915b8281106112a2575b505050611044875167828140344ae6ac3088820152878152611cd3565b61105e875167a1e4e5fcfa86421e88820152878152611cd3565b61107f5786866109048782519067e2c26213ff8fc39d818301528152611cd3565b85928492611265956002867fafbd5d299242bf861d198949ad835672e2e35b2e1838cee606a0b5aec2b4fa42956110c68251679c03d81f070184b88d8201528c8152611cd3565b6110e0825167e10792666d87c39d8d8201528c8152611cd3565b6110fa8251670ecb1cc017078e1c8d8201528c8152611cd3565b611114825167adadea4fe1cd242e8d8201528c8152611cd3565b61111c611d79565b611136825167b6568552aa412fad8d8201528c8152611cd3565b611150825167f3ac67d7160d9fa58d8201528c8152611cd3565b61116a825167adcb778e2a11066d8d8201528c8152611cd3565b611175600654611dbd565b806006556111948c678722512c2fa01d6b8551918201528d8152611cd3565b6111af8c67409eb7720a7894ad8551918201528d8152611cd3565b815260058b52206111d08851675b6dd18d135310c88c8201528b8152611cd3565b8381556111ed885167288147413a4be1a48c8201528b8152611cd3565b84600182015561120d885167ad250b4f5cf213e68c8201528b8152611cd3565b01556112298551674feb5b8dcd620c4889820152888152611cd3565b611243855167836460f42b84212289820152888152611cd3565b6006549586948651938493846040919493926060820195825260208201520152565b0390a2611282815167908c15634252191385820152848152611cd3565b61129c815167388208d3edde7b4d85820152848152611cd3565b51908152f35b6112bc8a516747dc53ec3900a3878b8201528a8152611cd3565b6112d68a516745ccc729455370bd8b8201528a8152611cd3565b6112df81611c3f565b905490831b1c6001600160a01b031633036113505750505050611312865167f9d1296aa99f883a87820152868152611cd3565b61132c8651673701aa2592a9a04f87820152868152611cd3565b600161134887516710fae94e044a933988820152878152611cd3565b888080611027565b61136e90610c8a8b51673337104e0fa2a7c98c8201528b8152611cd3565b61101f565b83346107be57806003193601126107be5761138c611ca7565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b83823461044c578160031936011261044c5760ff6020925460a01c1690519015158152f35b5082903461044c578160031936011261044c578051906114236020926723c486a2b69444a184820152838152611cd3565b61142b611ca7565b6114458151676b450cdf671c600e84820152838152611cd3565b61145f815167606291628cf81e3f84820152838152611cd3565b611479815167b52966845811b65b84820152838152611cd3565b61149381516793abb701890a9d4584820152838152611cd3565b825460ff8160a01c16156115305761150893945060ff60a01b191684557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa828251338152a16114f281516786a22a78dc55324984820152838152611cd3565b5190671de29775f2d0f1e4818301528152611cd3565b337ff5cbf596165cc457b2cd92e8d8450827ee314968160a5696402d75766fc52caf8280a280f35b8151638dfc202b60e01b81528590fd5b83823461044c578160031936011261044c57517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b5090346103985760203660031901126103985735916003548310156107be57506115af602092611c3f565b60018060a01b0391549060031b1c169051908152f35b5082903461044c576020806003193601126103985783356115f6835167691ad6027198b22684820152838152611cd3565b611610835167217f825567dd4ce584820152838152611cd3565b61162a835167906db78850351ddb84820152838152611cd3565b611644835167ed0ce3344d925b3684820152838152611cd3565b8361165f8451679dbc648f1dd127c185820152848152611cd3565b611679845167b0eecaa2e40a0f9685820152848152611cd3565b84906003918254905b818110611b1b575b50506116a6855167828140344ae6ac3086820152858152611cd3565b6116c0855167a1e4e5fcfa86421e86820152858152611cd3565b6116e15785846109048582519067e2c26213ff8fc39d818301528152611cd3565b6116fb8451679c03d81f070184b885820152848152611cd3565b611715845167e10792666d87c39d85820152848152611cd3565b61172f845167127e4a45bf1ba97885820152848152611cd3565b611749845167f8e5400ac9aa92a685820152848152611cd3565b611751611d79565b61176b84516723b4006eac42e48e85820152848152611cd3565b611785845167b242d3101a81869385820152848152611cd3565b61178d611d9a565b6117a7845167c243f82f08b7b30585820152848152611cd3565b6117c1845167b00af8957b56fea385820152848152611cd3565b6117db845167741b08323761a06e85820152848152611cd3565b6117f584516796dbcba08a76688185820152848152611cd3565b818552600583528385209061181a8551672dce3450b57ce7dd86820152858152611cd3565b61183485516736fdeca32d33586a86820152858152611cd3565b8187018054909160ff821615611861578887610a518882519067ea033dcab87c2c68818301528152611cd3565b61187b875167ce45bebf7e1e98e388820152878152611cd3565b611895875167af34adfe97ce9dbb88820152878152611cd3565b6118af875167c841ea5fca4f498988820152878152611cd3565b830154885411156118e45787866118d78782519067adbfdb7152e1acc9818301528152611cd3565b5163125e6df560e11b8152fd5b60019061190387959751670a383f7f7f98d00e88820152878152611cd3565b61191d855167bdad41b595c0ec1788820152878152611cd3565b60ff191617905561193e8251673c2e25ef207a1e7e85820152848152611cd3565b611958825167c42d906e8e7c8de485820152848152611cd3565b600254600182018054845163095ea7b360e01b81526001600160a01b03938416818b019081526020810192909252919392919086908290819060400103818b867f0000000000000000000000000000000000000000000000000000000000000000165af18015611b1157611af4575b506119e28451673acf8f60a9a96ddb87820152868152611cd3565b6119fc845167e20ba4888906894387820152868152611cd3565b6002541660028254935492015492813b15611af05790879291838a611a45885197889687958694635e62be2560e01b865285016040919493926060820195825260208201520152565b03925af18015611ae657611ab5575b509081611a74611a8a935167ef4e35f2b25f31f484820152838152611cd3565b5190676be0acd16a9dbfdf818301528152611cd3565b7f712ae1383f79ac853f8d882153778e0260ef8f03b504e2866e0593e04d2b291f8280a26001805580f35b67ffffffffffffffff8195929511611ad35784529293508385611a54565b634e487b7160e01b825260418652602482fd5b82513d87823e3d90fd5b8780fd5b611b0a90863d8811610387576103788183611d05565b50886119c7565b85513d8a823e3d90fd5b611b3587516747dc53ec3900a38788820152878152611cd3565b611b4f87516745ccc729455370bd88820152878152611cd3565b611b5881611c3f565b905490851b1c6001600160a01b03163303611bc757505050611b8a845167f9d1296aa99f883a85820152848152611cd3565b611ba48451673701aa2592a9a04f85820152848152611cd3565b6001611bc085516710fae94e044a933986820152858152611cd3565b878061168a565b611be590610c8a8851673337104e0fa2a7c989820152888152611cd3565b611682565b9290503461068b57602036600319011261068b578160a0948235815260056020522090815492600183015460ff6002850154936003860154950154169486526020860152840152606083015215156080820152f35b600354811015611c765760036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b0190600090565b634e487b7160e01b600052603260045260246000fd5b600435906001600160a01b0382168203611ca257565b600080fd5b6000546001600160a01b03163303611cbb57565b60405163118cdaa760e01b8152336004820152602490fd5b6040810190811067ffffffffffffffff821117611cef57604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117611cef57604052565b15611d2e57565b60405162461bcd60e51b815260206004820152600b60248201526a16995c9bc8185b5bdd5b9d60aa1b6044820152606490fd5b90816020910312611ca257518015158103611ca25790565b60ff60005460a01c16611d8857565b60405163d93c066560e01b8152600490fd5b600260015414611dab576002600155565b604051633ee5aeb560e01b8152600490fd5b6000198114611dcc5760010190565b634e487b7160e01b600052601160045260246000fd5b6040805191611e02602093677447d058455e519e85820152848152611cd3565b611e1c82516790feb8f86b54f49385820152848152611cd3565b611e368251679e8fbdc10a0c837885820152848152611cd3565b60009060038054925b838110611e8457505050509081611e69611e7f9351673a6312813c9ca67884820152838152611cd3565b519067e5efecb16695c3ff818301528152611cd3565b600090565b611e9e855167bc29108bd29bc79388820152878152611cd3565b611eb8855167daa6146e4116ab6588820152878152611cd3565b611ec181611c3f565b90546001600160a01b0385811692851b9190911c1603611f1957505050509081611efe611f1493516784667fe76bfb8a6384820152838152611cd3565b519067940189a561e7a3b4818301528152611cd3565b600190565b611f3790610c8a86516736cb80eeb292144b89820152888152611cd3565b611e3f56fea26469706673582212200e3cba5212e96712ba3e8e1d7485094c3bd1e4205ebcc4c1243b60c02282b6db64736f6c63430008140033";

type CircleTreasuryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CircleTreasuryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CircleTreasury__factory extends ContractFactory {
  constructor(...args: CircleTreasuryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _usdc: AddressLike,
    _adapter: AddressLike,
    _signers: AddressLike[],
    _required: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _usdc,
      _adapter,
      _signers,
      _required,
      overrides || {}
    );
  }
  override deploy(
    _usdc: AddressLike,
    _adapter: AddressLike,
    _signers: AddressLike[],
    _required: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _usdc,
      _adapter,
      _signers,
      _required,
      overrides || {}
    ) as Promise<
      CircleTreasury & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): CircleTreasury__factory {
    return super.connect(runner) as CircleTreasury__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CircleTreasuryInterface {
    return new Interface(_abi) as CircleTreasuryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): CircleTreasury {
    return new Contract(address, _abi, runner) as unknown as CircleTreasury;
  }
}
