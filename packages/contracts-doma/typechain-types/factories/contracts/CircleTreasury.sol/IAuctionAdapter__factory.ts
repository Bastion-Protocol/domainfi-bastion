/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IAuctionAdapter,
  IAuctionAdapterInterface,
} from "../../../contracts/CircleTreasury.sol/IAuctionAdapter";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "auctionId",
        type: "uint256",
      },
    ],
    name: "claimAuction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "auctionId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minAmountOut",
        type: "uint256",
      },
    ],
    name: "placeBid",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "auctionId",
        type: "uint256",
      },
    ],
    name: "settleAuction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class IAuctionAdapter__factory {
  static readonly abi = _abi;
  static createInterface(): IAuctionAdapterInterface {
    return new Interface(_abi) as IAuctionAdapterInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IAuctionAdapter {
    return new Contract(address, _abi, runner) as unknown as IAuctionAdapter;
  }
}
