/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  ICircleRegistry,
  ICircleRegistryInterface,
} from "../../../contracts/CircleFactory.sol/ICircleRegistry";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "circle",
        type: "address",
      },
    ],
    name: "registerCircle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class ICircleRegistry__factory {
  static readonly abi = _abi;
  static createInterface(): ICircleRegistryInterface {
    return new Interface(_abi) as ICircleRegistryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ICircleRegistry {
    return new Contract(address, _abi, runner) as unknown as ICircleRegistry;
  }
}
