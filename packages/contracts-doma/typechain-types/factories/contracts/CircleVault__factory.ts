/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  CircleVault,
  CircleVaultInterface,
} from "../../contracts/CircleVault";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_domainNFT",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_signers",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "_required",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "EnforcedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "ExpectedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidSigners",
    type: "error",
  },
  {
    inputs: [],
    name: "NotAuthorized",
    type: "error",
  },
  {
    inputs: [],
    name: "NotEnoughApprovals",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInCustody",
    type: "error",
  },
  {
    inputs: [],
    name: "NotSigner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "domainTokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newCustodian",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "action",
        type: "string",
      },
    ],
    name: "CustodyChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "by",
        type: "address",
      },
    ],
    name: "EmergencyPaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "by",
        type: "address",
      },
    ],
    name: "EmergencyUnpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "domainTokenIds",
        type: "uint256[]",
      },
      {
        internalType: "address[]",
        name: "recipients",
        type: "address[]",
      },
    ],
    name: "batchWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "auctionId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "domainTokenId",
        type: "uint256",
      },
    ],
    name: "depositDomain",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "domainCustody",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "domainNFT",
    outputs: [
      {
        internalType: "contract IERC721",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencyPause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "emergencyUnpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getSigners",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isSigner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "auctionId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "domainTokenId",
        type: "uint256",
      },
    ],
    name: "onClaim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "requiredSignatures",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "signers",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "domainTokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "auctionId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdrawDomain",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "withdrawalApprovalCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "withdrawalApprovals",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060409080825234620003e7576200229380380380916200002282856200041e565b83398101606082820312620003e7576200003c8262000442565b6020838101519092916001600160401b0391828111620003e75785019483601f87011215620003e757855193838511620003ec578460051b9688519562000086888a01886200041e565b865286860190878299820101928311620003e7579087808b95949301915b838310620003c657505050500151943315620003ae5760008054336001600160a01b03198216811783558951966001600160a01b0395939493909286929083167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08780a3620001286001988980556790ccf92f473005a08b8201528a815262000402565b620001448b5167ad31ed710d9ebb318b8201528a815262000402565b620001608b5167891c3e802a15ea2a8b8201528a815262000402565b6200017c8b516714a2f2931a65f98f8b8201528a815262000402565b1680156200037b57620001a08a51671942dd7beb2cb2c78a82015289815262000402565b620001bc8a5167d464524f88aa0a068a82015289815262000402565b620001d88a51672715c9cd905a340e8a82015289815262000402565b620001f48a516750f9c600beb56c148a82015289815262000402565b88825110158062000371575b156200033b57620002228a5167bb150515b1cdc0b58a82015289815262000402565b6200023e8a51675a85a5df4e0f3e3d8a82015289815262000402565b6080526200025d89516789ce9d115e96b1af8982015288815262000402565b519384116200032757680100000000000000008411620003275760025484600255808510620002fc575b509160028252858220915b848110620002e8578888620002b98983519067a834e6d396a8024d81830152815262000402565b60035551611e3b90816200045882396080518181816101d1015281816103bd015281816106540152611aaf0152f35b835182168382015592860192850162000292565b60028352858588852092830192015b8281106200031b57505062000287565b8481550186906200030b565b634e487b7160e01b82526041600452602482fd5b895162461bcd60e51b815260048101899052600f60248201526e496e76616c6964207369676e65727360881b6044820152606490fd5b5088151562000200565b895162461bcd60e51b815260048101899052600c60248201526b5a65726f206164647265737360a01b6044820152606490fd5b8651631e4fbdf760e01b815260006004820152602490fd5b8293949550620003d7829362000442565b8152019101878a949392620000a4565b600080fd5b634e487b7160e01b600052604160045260246000fd5b604081019081106001600160401b03821117620003ec57604052565b601f909101601f19168101906001600160401b03821190821017620003ec57604052565b51906001600160a01b0382168203620003e75756fe6080604081815260048036101561001557600080fd5b600092833560e01c908162f714ce1461135b575080630c9a42d414610ef65780632079fb9a14610eb65780632b18858414610b8b5780632dcd2f7214610b6457806334a47c6c14610b1e5780634a4e3bd5146109d057806351858e27146108915780635afbeeb2146108605780635c975abb1461083b578063715018a6146107de5780637df73e27146107af5780637e470c33146105755780638d068043146105565780638da5cb5b1461052e57806394cf795e146103ec578063a16d4d1c146103a8578063f2fde38b146103185763ff6ed412146100f357600080fd5b34610314576101013661189c565b91905082519261012260209467627f70b191db985786820152858152611908565b61012a611924565b610144815167d5c9b383632332f386820152858152611908565b61015e815167fb087e973678812d86820152858152611908565b610166611945565b6101808151673b97ff28261719ce86820152858152611908565b61019a815167ee71fcabe7b4f0ac86820152858152611908565b6101b4815167bdacd69785e3399686820152858152611908565b6101ce815167f1671b17789fb59f86820152858152611908565b847f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b156103105782516323b872dd60e01b815233858201908152306020820152604081018790529091839183919082908490829060600103925af18015610306576102ee575b505065657363726f7760d01b916102668251671279c97f04162ea087820152868152611908565b838652845280852080546001600160a01b031916301790558051678ea233bc9bc2b41f8186015284815261029990611908565b6102b3815167cb9cd229f481c16b86820152858152611908565b60068151948086528501528301527fef01e4fdc4e24e037a25f2e4683b01932efb543d245a70860a03dab42026128060603093a36001805580f35b6102f7906118de565b61030257843861023f565b8480fd5b83513d84823e3d90fd5b5080fd5b8280fd5b503461031457602036600319011261031457610332611808565b9061033b6118b2565b6001600160a01b03918216928315610392575050600054826bffffffffffffffffffffffff60a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b51631e4fbdf760e01b8152908101849052602490fd5b505034610310578160031936011261031057517f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03168152602090f35b50919034610310578160031936011261031057805161041c60209167c8a0eddf58d9cb1c83820152828152611908565b610436825167dfe0671de58ddd4183820152828152611908565b6104508251674a8f99fb44836b3383820152828152611908565b81519283928260025495868152018095600284527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace90845b868282106105115750505050849003601f01601f191684019567ffffffffffffffff8711858810176104fc575085815282865292518583018190528594938501939290915b8281106104dc57505050500390f35b83516001600160a01b0316855286955093810193928101926001016104cd565b604190634e487b7160e01b6000525260246000fd5b83546001600160a01b031685529093019260019283019201610488565b505034610310578160031936011261031057905490516001600160a01b039091168152602090f35b5050346103105781600319360112610310576020906003549051908152f35b509034610314576105853661189c565b9180915051926105a660209467faa8687d5ffa02fa86820152858152611908565b6105ae611924565b6105c8825167ec11ac0bdf72baee86820152858152611908565b6105e28251679a037ca4b4d8f60f86820152858152611908565b6105ea611945565b610604825167db403db4d8d62ac286820152858152611908565b61061e8251673b45564ff4cb8df286820152858152611908565b61063882516758a5406df7a0629e86820152858152611908565b6106528251671e1b54d8bc4e6a3b86820152858152611908565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316803b156107ab5782516323b872dd60e01b815233838201908152306020820152604081018690529091879183919082908490829060600103925af180156107a15761077a575b50906e185d58dd1a5bdb97d9195c1bdcda5d608a1b916106f2825167b5f266f6eb366f7887820152868152611908565b838652845280852080546001600160a01b031916301790558051676f97cf16cefaf6dd8186015284815261072590611908565b61073f815167809b1bec7de6797786820152858152611908565b600f8151948086528501528301527fef01e4fdc4e24e037a25f2e4683b01932efb543d245a70860a03dab42026128060603093a36001805580f35b946107996e185d58dd1a5bdb97d9195c1bdcda5d608a1b9392966118de565b9490916106c2565b83513d88823e3d90fd5b8580fd5b505034610310576020366003190112610310576020906107d56107d0611808565b611cae565b90519015158152f35b83346108385780600319360112610838576107f76118b2565b80546001600160a01b03198116825581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b50503461031057816003193601126103105760ff6020925460a01c1690519015158152f35b503461031457602036600319011261031457803583526020908152918190205490516001600160a01b039091168152f35b505034610310578160031936011261031057806109a89151906108c5602092671273d69f01be1bd684820152838152611908565b6108cd6118b2565b6108e78151674c9d048166659b2884820152838152611908565b610901815167772176f76307c02784820152838152611908565b61091b815167f4fe19951eb6740884820152838152611908565b610935815167cf334218664771c184820152838152611908565b61093d611924565b835460ff60a01b1916600160a01b17845580513381527f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258908390a16109928151679947bbbcf8a84efd84820152838152611908565b519067c8e6afc6373ef544818301528152611908565b337fb8fad2fa0ed7a383e747c309ef2c4391d7b65592a48893e57ccc1fab707914568280a280f35b50919034610310578160031936011261031057805190610a01602092675e34e03db15a5f8b84820152838152611908565b610a096118b2565b610a23815167fe09fff38aa237a984820152838152611908565b610a3d8151676f0d792f4839a43084820152838152611908565b610a57815167b46cc1fd0e2f92f684820152838152611908565b610a718151671bc9ca80bf5cc20e84820152838152611908565b825460ff8160a01c1615610b0e57610ae693945060ff60a01b191684557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa828251338152a1610ad0815167cf0c833af0ddb11c84820152838152611908565b51906747d318e03a3cbfa1818301528152611908565b337ff5cbf596165cc457b2cd92e8d8450827ee314968160a5696402d75766fc52caf8280a280f35b8151638dfc202b60e01b81528590fd5b50346103145781600319360112610314578160209360ff92610b3e6117ed565b90358252600586528282206001600160a01b039091168252855220549151911615158152f35b50346103145760203660031901126103145760209282913581526006845220549051908152f35b509134610838578160031936011261083857610ba56117ed565b90825191610bc460209367b32075cb0459fe9285820152848152611908565b610bde845167d5c7e558b6e25a7885820152848152611908565b610bf8845167c6d99ba382f7ef7385820152848152611908565b610c1284516769c894eb94d3c6ac85820152848152611908565b81610c2d8551675ccc84df05ceb1ef86820152858152611908565b610c47855167acb1e0881f39bb4186820152858152611908565b600254835b818110610ddf575b5050610c7085516749f6b248ce78b00f86820152858152611908565b610c8a8551670c906ee1ac2f77c486820152858152611908565b610cb8575050610cab90825190670af4641e7c710876818301528152611908565b5163143606b960e31b8152fd5b84610dd2610dd8939486610cdc8151672b3d2d6576534ce184820152838152611908565b610cf6815167f6c786f20dd995b184820152838152611908565b610d108151677440a80b16fb47e384820152838152611908565b610d2a8151675c4099ca841664b284820152838152611908565b610d32611924565b610d4c815167def1be868dd650db84820152838152611908565b610d6681516749ae554fd76668e784820152838152611908565b610d6e611945565b610d888151674b504265457ad9d684820152838152611908565b610da2815167886fc8a8964c428984820152838152611908565b610dbc815167fe22de1ed206085584820152838152611908565b519067e4aac16207b232ff818301528152611908565b3561198d565b6001805580f35b610df9875167d8a820eaefeb224588820152878152611908565b610e13875167c5d54676fd81b75c88820152878152611908565b610e1c8161184f565b905460039190911b1c6001600160a01b03163303610e8e57505050610e51845167a5bf7b2af93f8fc585820152848152611908565b610e6b845167e1b0f6cfa172d18d85820152848152611908565b6001610e87855167631f88f03623e54086820152858152611908565b3880610c54565b610eb190610eac885167aec9c91012d4992889820152888152611908565b611968565b610c4c565b50346103145760203660031901126103145735916002548310156108385750610ee060209261184f565b905491519160018060a01b039160031b1c168152f35b50913461083857816003193601126108385767ffffffffffffffff90833582811161031057610f28903690860161181e565b9260243590811161031457610f40903690870161181e565b939091855194610f6160209667b5484073e2bc9e9188820152878152611908565b610f7b875167d5c7e558b6e25a7888820152878152611908565b610f95875167c6d99ba382f7ef7388820152878152611908565b610faf87516769c894eb94d3c6ac88820152878152611908565b84610fca8851675ccc84df05ceb1ef89820152888152611908565b610fe4885167acb1e0881f39bb4189820152888152611908565b600254865b818110611289575b505061100d88516749f6b248ce78b00f89820152888152611908565b6110278851670c906ee1ac2f77c489820152888152611908565b611048578787610cab88825190670af4641e7c710876818301528152611908565b86886110678298979851672b3d2d6576534ce189820152888152611908565b611081825167f6c786f20dd995b189820152888152611908565b61109b8251675f4390530f60c40789820152888152611908565b6110b5825167c7397a2747ec3b7889820152888152611908565b6110bd611924565b6110d7825167ff05e844d5da8d7f89820152888152611908565b6110f182516731f867281b1f4e4189820152888152611908565b6110f9611945565b611113825167975cfe64352a964589820152888152611908565b61112d82516788cd75fd74e569fc89820152888152611908565b61114782516772c41ea8ab43add689820152888152611908565b611161825167b485a0e7096f353f89820152888152611908565b61117b825167d5b7799705c003e189820152888152611908565b828503611256575061119d8151676313f5dccadc262888820152878152611908565b6111b78151676d7fe53ec921992688820152878152611908565b6111d18151673f89a69aaac5bb9e88820152878152611908565b865b8481106111e257876001805580f35b6111fc8251677d62c45f7de4154789820152888152611908565b6112168251671f3c50da8090825a89820152888152611908565b611221818686611c9e565b359061122e818589611c9e565b35916001600160a01b03831683036112525761124d92610eac9161198d565b6111d3565b8980fd5b86606492519162461bcd60e51b8352820152600f60248201526e098cadccee8d040dad2e6dac2e8c6d608b1b6044820152fd5b6112a38a5167d8a820eaefeb22458b8201528a8152611908565b6112bd8a5167c5d54676fd81b75c8b8201528a8152611908565b6112c68161184f565b905460039190911b1c6001600160a01b03163303611338575050506112fb875167a5bf7b2af93f8fc588820152878152611908565b611315875167e1b0f6cfa172d18d88820152878152611908565b6001611331885167631f88f03623e54089820152888152611908565b3880610ff1565b61135690610eac8b5167aec9c91012d499288c8201528b8152611908565b610fe9565b919390503461083857826003193601126108385783356113796117ed565b9061139560209467219ca899f74fed5986820152858152611908565b6113af855167d5c7e558b6e25a7886820152858152611908565b6113c9855167c6d99ba382f7ef7386820152858152611908565b6113e385516769c894eb94d3c6ac86820152858152611908565b826113fe8651675ccc84df05ceb1ef87820152868152611908565b611418865167acb1e0881f39bb4187820152868152611908565b600254845b81811061171b575b505061144186516749f6b248ce78b00f87820152868152611908565b61145b8651670c906ee1ac2f77c487820152868152611908565b61147d57505050610cab90825190670af4641e7c710876818301528152611908565b6114978551672b3d2d6576534ce186820152858152611908565b6114b1855167f6c786f20dd995b186820152858152611908565b6114cb855167038c0175a07c7fb086820152858152611908565b6114e5855167c73cbd1655960f0b86820152858152611908565b6114ed611924565b61150785516759ea45b529b0d46086820152858152611908565b61152185516712ffde7f354ad50e86820152858152611908565b611529611945565b611543855167a076fb9f707fede686820152858152611908565b61155d8551671081d2ceb4672fea86820152858152611908565b61157785516713caaf90301a8ea386820152858152611908565b61159185516768443df74679e2cc86820152858152611908565b8083526005845284832033845284528483205460ff16156115d7575050506115ca90825190670ea9045df28ddd8d818301528152611908565b5163080fc0bd60e11b8152fd5b8492936115f4845167aff84a30e305c2fc83820152828152611908565b61160e845167f667490b1c48ff3283820152828152611908565b818552600581528385203386528152838520600160ff1982541617905561164584516779cae7cb291d244683820152828152611908565b818552600681528385206116598154611968565b90556116758451679ccfb945348684b983820152828152611908565b61168f845167a6e64989047fb16f83820152828152611908565b8185526006815283852054600354116116f9576116f490846116c4610dd89651678f16bebb991cf33184820152838152611908565b6116de8151671b433a03ea4f3aa684820152838152611908565b51906726e53d664767fa3f818301528152611908565b61198d565b91505061171691519067c7980b0579fe26f1818301528152611908565b610dd8565b611735885167d8a820eaefeb224589820152888152611908565b61174f885167c5d54676fd81b75c89820152888152611908565b6117588161184f565b905460039190911b1c6001600160a01b031633036117ca5750505061178d855167a5bf7b2af93f8fc586820152858152611908565b6117a7855167e1b0f6cfa172d18d86820152858152611908565b60016117c3865167631f88f03623e54087820152868152611908565b3880611425565b6117e890610eac895167aec9c91012d499288a820152898152611908565b61141d565b602435906001600160a01b038216820361180357565b600080fd5b600435906001600160a01b038216820361180357565b9181601f840112156118035782359167ffffffffffffffff8311611803576020808501948460051b01011161180357565b6002548110156118865760026000527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace0190600090565b634e487b7160e01b600052603260045260246000fd5b6040906003190112611803576004359060243590565b6000546001600160a01b031633036118c657565b60405163118cdaa760e01b8152336004820152602490fd5b67ffffffffffffffff81116118f257604052565b634e487b7160e01b600052604160045260246000fd5b6040810190811067ffffffffffffffff8211176118f257604052565b60ff60005460a01c1661193357565b60405163d93c066560e01b8152600490fd5b600260015414611956576002600155565b604051633ee5aeb560e01b8152600490fd5b60001981146119775760010190565b634e487b7160e01b600052601160045260246000fd5b919060409081516000946119b26020926776470fa4e3a774bb84820152838152611908565b6119cc84516769626d716b76f4eb84820152838152611908565b6119e684516710beef076835901c84820152838152611908565b611a00845167d6cb956d8b4006b884820152838152611908565b80865260048252838620546001600160a01b03939084163003611c6957611a3785516703612984f76e894485820152848152611908565b611a51855167e285acea9c16e1f985820152848152611908565b818752600483528487209084811691826bffffffffffffffffffffffff60a01b825416179055611a91865167d73ef151a1e31d1586820152858152611908565b611aab8651671b13f61b318a034b86820152858152611908565b87857f00000000000000000000000000000000000000000000000000000000000000001691823b15610310578751632142170760e11b81523060048201526001600160a01b0391909116602482015260448101859052918290606490829084905af18015611c5f57611c4c575b50611b338551672fac644f0bd98b3785820152848152611908565b611b4d8551676ce889fb279db12385820152848152611908565b817fef01e4fdc4e24e037a25f2e4683b01932efb543d245a70860a03dab4202612806060875186815260088782015267776974686472617760c01b89820152a3611ba784516738dcd9575db76a8184820152838152611908565b611bc1845167bfbecbc65a1a732d84820152838152611908565b855b600254811015611c2257611c1d90611beb86516769bd155b7614058286820152858152611908565b8288526005845285882085611bff8361184f565b90549060031b1c1660005284528560002060ff198154169055611968565b611bc3565b5060069250949394611c448451674180128c952d1b0684820152838152611908565b845252812055565b611c58909791976118de565b9538611b18565b86513d8a823e3d90fd5b845162461bcd60e51b815260048101849052600e60248201526d4e6f7420696e20637573746f647960901b6044820152606490fd5b91908110156118865760051b0190565b6040805191611cce60209367c4ba2d927fc0da6485820152848152611908565b611ce8825167c02c44caad30f26585820152848152611908565b611d028251676f2c111e387d364f85820152848152611908565b6002549060005b828110611d4d575050509081611d32611d4893516742a3416a19c0b4ba84820152838152611908565b519067cdb1de23af3834d0818301528152611908565b600090565b611d67845167f2fa74a4e3952a0187820152868152611908565b611d8184516797ef10b450383ad287820152868152611908565b611d8a8161184f565b90546001600160a01b0360039290921b1c811690831603611de2575050509081611dc7611ddd9351677400e60163758d1484820152838152611908565b51906747e31460f9271c4a818301528152611908565b600190565b611e0090610eac855167749dc9c89313e3c688820152878152611908565b611d0956fea264697066735822122021c01e2e18be19dc7730538874376f48c87f2d275e98eb1aebc63deb3ab86db664736f6c63430008140033";

type CircleVaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: CircleVaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class CircleVault__factory extends ContractFactory {
  constructor(...args: CircleVaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _domainNFT: AddressLike,
    _signers: AddressLike[],
    _required: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _domainNFT,
      _signers,
      _required,
      overrides || {}
    );
  }
  override deploy(
    _domainNFT: AddressLike,
    _signers: AddressLike[],
    _required: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _domainNFT,
      _signers,
      _required,
      overrides || {}
    ) as Promise<
      CircleVault & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): CircleVault__factory {
    return super.connect(runner) as CircleVault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CircleVaultInterface {
    return new Interface(_abi) as CircleVaultInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): CircleVault {
    return new Contract(address, _abi, runner) as unknown as CircleVault;
  }
}
