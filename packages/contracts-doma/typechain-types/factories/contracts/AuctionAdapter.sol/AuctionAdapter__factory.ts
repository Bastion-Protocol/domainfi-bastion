/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  AuctionAdapter,
  AuctionAdapterInterface,
} from "../../../contracts/AuctionAdapter.sol/AuctionAdapter";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_auction",
        type: "address",
      },
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidAuction",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidVault",
    type: "error",
  },
  {
    inputs: [],
    name: "NotCircleTreasury",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [],
    name: "SlippageProtection",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "auctionId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "claimer",
        type: "address",
      },
    ],
    name: "AuctionClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "auctionId",
        type: "uint256",
      },
    ],
    name: "AuctionSettled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "circle",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "auctionId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "minAmountOut",
        type: "uint256",
      },
    ],
    name: "BidPlaced",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "auctionId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "domain",
        type: "address",
      },
    ],
    name: "DomainDeposited",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "auctionId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "DomainWithdrawn",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "auction",
    outputs: [
      {
        internalType: "contract IAuction",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "auctionId",
        type: "uint256",
      },
    ],
    name: "claimAuction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "auctionId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "domainTokenId",
        type: "uint256",
      },
    ],
    name: "depositDomain",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "auctionId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minAmountOut",
        type: "uint256",
      },
    ],
    name: "placeBid",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_auction",
        type: "address",
      },
    ],
    name: "setAuction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_vault",
        type: "address",
      },
    ],
    name: "setVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "auctionId",
        type: "uint256",
      },
    ],
    name: "settleAuction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vault",
    outputs: [
      {
        internalType: "contract ICircleVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "auctionId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "withdrawDomain",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608034610116576108b390601f38839003908101601f19168201906001600160401b0382118383101761011b578083916040958694855283398101031261011657610055602061004e83610131565b9201610131565b33156100fe5760008054336001600160a01b03198083168217845586519590946001600160a01b03949093859391908416907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a360018055169384156100ef5750169182156100de5781600254161760025560035416176003555161076d90816101468239f35b8351630681d31960e51b8152600490fd5b63010ab10b60e51b8152600490fd5b8251631e4fbdf760e01b815260006004820152602490fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036101165756fe608060408181526004918236101561001657600080fd5b600092833560e01c9182632b188584146105d9575081632e9936111461052f5781635e62be25146104505781636817031b146103f8578163715018a61461039b5781637d9f6db5146103725781637e470c33146102ad5781638da5cb5b146102855781639aafc6c9146101bc578163b8c6f57914610164578163f2fde38b146100d4575063fbfa77cf146100a957600080fd5b346100d057816003193601126100d05760035490516001600160a01b039091168152602090f35b5080fd5b905034610160576020366003190112610160576100ef6106a3565b906100f86106be565b6001600160a01b0391821692831561014a575050600054826001600160601b0360a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8280fd5b9050346101605760203660031901126101605761017f6106a3565b6101876106be565b6001600160a01b03169182156101af5750506001600160601b0360a01b600254161760025580f35b5163010ab10b60e51b8152fd5b905034610160576020366003190112610160578254813592906001600160a01b03908116330361027757908492916101f2610714565b6002541691823b15610273578460248592838551968794859363379607f560e01b85528401525af190811561026a5750610256575b505033907f815f33bf2e92b2ce2de5ce4fe8f253205512bc0372842c4799834249d56154948380a36001805580f35b61025f906106ea565b6100d0578138610227565b513d84823e3d90fd5b8380fd5b5051633860aea960e21b8152fd5b5050346100d057816003193601126100d057905490516001600160a01b039091168152602090f35b839150346100d057826003193601126100d05781546001600160a01b039382359291851633036103655783946003541691823b156103615783604486928385519687948593637e470c3360e01b855284015260243560248401525af19081156103585750908391610341575b50807fac5f650da1ad12fa2b69f58246086093f02e20e53aa649b9f19c7d382da7917391a380f35b61034a906106ea565b610355578184610319565b50fd5b513d85823e3d90fd5b8480fd5b51633860aea960e21b8152fd5b5050346100d057816003193601126100d05760025490516001600160a01b039091168152602090f35b83346103f557806003193601126103f5576103b46106be565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b905034610160576020366003190112610160576104136106a3565b61041b6106be565b6001600160a01b03169182156104435750506001600160601b0360a01b600354161760035580f35b51630681d31960e51b8152fd5b9190503461016057606036600319011261016057813591602435916044359160018060a01b038087541633036105205790869161048b610714565b6002541690813b156101605786606484928387519586948593635e62be2560e01b85528401528a60248401528960448401525af1801561051657610502575b50507fb46d776cdb48d081a0c7d3ff32dc2792e4e8fbce788723207515723628020d3291815193845260208401523392a36001805580f35b61050b906106ea565b6103615784386104ca565b83513d84823e3d90fd5b509051633860aea960e21b8152fd5b905034610160576020366003190112610160578254813592906001600160a01b0390811633036102775790849291610565610714565b6002541691823b1561027357846024859283855196879485936211bf0560eb1b85528401525af190811561026a57506105c5575b50807f2f95e6505f529dd225ce705685fe55440c01f2824ac3fb4303f6eef4bd453ff491a26001805580f35b6105ce906106ea565b6100d0578138610599565b929150346102735781600319360112610273576024356001600160a01b03818116948335949286900361069f57818754163303610691575085906003541692833b156100d057604485918385519687948593630ac6216160e21b85528401528960248401525af19081156106885750610675575b507f2a5973d919deb2fdfadbc6c07d686260bbb4ec0a16f10f28bedf7a735b811bfd8380a380f35b610681909391936106ea565b913861064d565b513d86823e3d90fd5b633860aea960e21b81528390fd5b8680fd5b600435906001600160a01b03821682036106b957565b600080fd5b6000546001600160a01b031633036106d257565b60405163118cdaa760e01b8152336004820152602490fd5b67ffffffffffffffff81116106fe57604052565b634e487b7160e01b600052604160045260246000fd5b600260015414610725576002600155565b604051633ee5aeb560e01b8152600490fdfea2646970667358221220e8cd4c8e33eb996f1642e96a44d01099431699539b12c0a931cb33600e025af864736f6c63430008140033";

type AuctionAdapterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AuctionAdapterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AuctionAdapter__factory extends ContractFactory {
  constructor(...args: AuctionAdapterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _auction: AddressLike,
    _vault: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_auction, _vault, overrides || {});
  }
  override deploy(
    _auction: AddressLike,
    _vault: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_auction, _vault, overrides || {}) as Promise<
      AuctionAdapter & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): AuctionAdapter__factory {
    return super.connect(runner) as AuctionAdapter__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AuctionAdapterInterface {
    return new Interface(_abi) as AuctionAdapterInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): AuctionAdapter {
    return new Contract(address, _abi, runner) as unknown as AuctionAdapter;
  }
}
