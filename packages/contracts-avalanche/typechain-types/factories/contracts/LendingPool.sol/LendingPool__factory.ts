/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  LendingPool,
  LendingPoolInterface,
} from "../../../contracts/LendingPool.sol/LendingPool";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "usdc",
        type: "address",
      },
      {
        internalType: "address",
        name: "wavax",
        type: "address",
      },
      {
        internalType: "address",
        name: "_collateralManager",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyLiquidated",
    type: "error",
  },
  {
    inputs: [],
    name: "EnforcedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "ExpectedPause",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAsset",
    type: "error",
  },
  {
    inputs: [],
    name: "NotBorrower",
    type: "error",
  },
  {
    inputs: [],
    name: "NotEnoughLiquidity",
    type: "error",
  },
  {
    inputs: [],
    name: "NotLiquidatable",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "by",
        type: "address",
      },
    ],
    name: "EmergencyPaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "by",
        type: "address",
      },
    ],
    name: "EmergencyUnpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "enum LendingPool.Asset",
        name: "asset",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newRateBps",
        type: "uint256",
      },
    ],
    name: "InterestRateUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum LendingPool.Asset",
        name: "asset",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "LiquidityAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "provider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum LendingPool.Asset",
        name: "asset",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "LiquidityRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "loanId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "borrower",
        type: "address",
      },
      {
        indexed: false,
        internalType: "enum LendingPool.Asset",
        name: "asset",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "LoanCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "loanId",
        type: "uint256",
      },
    ],
    name: "LoanLiquidated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "loanId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "LoanRepaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "YEAR",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "loanId",
        type: "uint256",
      },
    ],
    name: "accruedInterest",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum LendingPool.Asset",
        name: "asset",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "addLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "collateralType",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "collateralIdOrAmount",
        type: "uint256",
      },
      {
        internalType: "enum LendingPool.Asset",
        name: "asset",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "borrow",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "collateralManager",
    outputs: [
      {
        internalType: "contract ICollateralManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum LendingPool.Asset",
        name: "",
        type: "uint8",
      },
    ],
    name: "interestRateBps",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "loanId",
        type: "uint256",
      },
    ],
    name: "liquidate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "loanCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "loans",
    outputs: [
      {
        internalType: "address",
        name: "borrower",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "collateralType",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "collateralIdOrAmount",
        type: "uint256",
      },
      {
        internalType: "enum LendingPool.Asset",
        name: "asset",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "principal",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "interestIndex",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastAccrued",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "liquidated",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum LendingPool.Asset",
        name: "asset",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "removeLiquidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "loanId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "repay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum LendingPool.Asset",
        name: "asset",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "newRateBps",
        type: "uint256",
      },
    ],
    name: "setInterestRate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum LendingPool.Asset",
        name: "",
        type: "uint8",
      },
    ],
    name: "supportedAssets",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum LendingPool.Asset",
        name: "",
        type: "uint8",
      },
    ],
    name: "totalBorrows",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum LendingPool.Asset",
        name: "",
        type: "uint8",
      },
    ],
    name: "totalLiquidity",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "enum LendingPool.Asset",
        name: "",
        type: "uint8",
      },
    ],
    name: "utilizationRateBps",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608034620001dd57601f620024eb38819003918201601f191683019291906001600160401b03841183851017620001e2578160609284926040968752833981010312620001dd57620000518162000214565b9060206200006e846200006683850162000214565b930162000214565b903315620001c557620001ad906102bc86600080549660018060a01b031998338a8a16178355620000e4845160018060a01b039a8b3391167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08780a36001805567e249cc51210bac7788820152878152620001f8565b620001008451679aaaa0f151eb168f88820152878152620001f8565b828052600286528884842091168a825416179055620001308351674f04fb7028b9a03387820152868152620001f8565b60018252600285528783832091168982541617905562000161825167a92ffd2acc45d93c86820152858152620001f8565b808052600584526101f4828220556200018b8251670eb08394b3e402d686820152858152620001f8565b60018152600584522055855190678744943e30e8d115818301528152620001f8565b16906009541617600955516122c190816200022a8239f35b8451631e4fbdf760e01b815260006004820152602490fd5b600080fd5b634e487b7160e01b600052604160045260246000fd5b604081019081106001600160401b03821117620001e257604052565b51906001600160a01b0382168203620001dd5756fe608060408181526004908136101561001657600080fd5b600092833560e01c90816301d3c92b14611cdb5750806323be345c14611cb25780633950a311146119835780633f4ba83a14611836578063415f1240146115435780634a69310f14610e7a5780635c975abb14610e555780636ffcc7ed14610e19578063715018a614610dbf5780638391454014610da05780638456cb5914610c615780638cd81c00146109755780638da5cb5b1461094d5780639cb0c5b214610923578063b41bedc0146108f9578063bcff3e3b146108d2578063bf485b561461089d578063ce63094d1461087e578063d8aed1451461026f578063ddf059a21461023b578063e1ec3c68146101b05763f2fde38b1461011657600080fd5b346101ac5760203660031901126101ac576001600160a01b038235818116939192908490036101a857610147611f62565b8315610192575050600054826bffffffffffffffffffffffff60a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8480fd5b8280fd5b50346101ac5760203660031901126101ac5780610100938335815260076020522080549260018201549061022360ff6002850154166003850154928501549360ff60066005880154970154169660ff81519960018060a01b0381168b5260a01c1660208a01528801526060870190611f55565b608085015260a084015260c0830152151560e0820152f35b5090346101ac5760203660031901126101ac573560028110156101ac57602092506000526006825280600020549051908152f35b5082903461087a578060031936011261087a578235906024358151916102a6602093677795c0b0b18437c485820152848152611f8e565b6102ae61205f565b6102c8815167a24848cb6ef982bf85820152848152611f8e565b6102e28151673834bda49f5fe4aa85820152848152611f8e565b6102ea612080565b610304815167d007d9c2f58c594e85820152848152611f8e565b61031e81516718cf751dc792f64485820152848152611f8e565b6103388151671692a2c844ffd5eb85820152848152611f8e565b610352815167af614d4a719e605d85820152848152611f8e565b83855260078352808520610376825167e44a45979653f3d586820152858152611f8e565b6103908251674ffe2fe0a9da719086820152858152611f8e565b6103aa825167ad0040d4a8e6b34c86820152858152611f8e565b80546001600160a01b03979088163303610848576103d88351670de61105f83834ab87820152868152611f8e565b6103f28351670d9d67923113205c87820152868152611f8e565b61040c8351671c517bbb3a8a30e687820152868152611f8e565b6104268351675451ebde813de7d387820152868152611f8e565b60ff61043881600685015416156120fc565b610452845167b09417888924bb5488820152878152611f8e565b61046c8451673a976e1218c5c06a88820152878152611f8e565b6104868451671099263382a65e8988820152878152611f8e565b61048f87612150565b916104aa855167e0a854c3e9d2158189820152888152611f8e565b6104c4855167bb185953df771dbb89820152888152611f8e565b6104d36003850193845461203c565b906104ee865167b0cac756de160fda8a820152898152611f8e565b610508865167809f4c2b13f4b1d18a820152898152611f8e565b61052286516733390d7fbc9af2298a820152898152611f8e565b8187116108145791899a91888b9594885182810167d3ecbfb40052c183905282815261054d90611f8e565b885167aaea4a6958f8241c8382015282815261056890611f8e565b8851679ca0b1112b12834c8382015282815261058390611f8e565b60028801948486541661059590611edb565b548a516323b872dd60e01b815233938101938452306020850152604084018d90529e8f93849003606001928492165af19a8b1561080a577f040cee90ee4799897c30ca04e5feb6fa43dbba9b6d084b4b257cdafd84ba013e9a9b6107dd575b5061060f8751678d1ad454d35686498b8201528a8152611f8e565b610629875167cac269d541e341408b8201528a8152611f8e565b80881061072f576106b1916106a9916106528951676dbe571c319fe6ae8d8201528c8152611f8e565b61066c8951672c6eed44625358c88d8201528c8152611f8e565b61068361067b83875416611f23565b91825461203c565b905561069f885167f6491210f21c77be8c8201528b8152611f8e565b8454935416611f3c565b9182546120ef565b90556106cd845167f52c32a21bba7b2388820152878152611f8e565b555b6106e9825167790839dd6f3d058286820152858152611f8e565b6005429101556107098151670905c3c8f3221ac585820152848152611f8e565b6107238151671e20cb47539f939785820152848152611f8e565b51908152a26001805580f35b50916107cb9350610750865167adcf12766d2df9e88a820152898152611f8e565b61076a865167421d7c501261197f8a820152898152611f8e565b6107758782546120ef565b9055610791855167e19f043df6ffddf989820152888152611f8e565b61079d82825416611f23565b6107a887825461203c565b90556107c48551677baad21468419cde89820152888152611f8e565b5416611f3c565b6107d68482546120ef565b90556106cf565b6107fc908a3d8c11610803575b6107f48183611fc0565b810190612024565b508c6105f4565b503d6107ea565b87513d87823e3d90fd5b855162461bcd60e51b8152908101889052600e60248201526d0a4cae0c2f240e8dede40daeac6d60931b6044820152606490fd5b825162461bcd60e51b8152908101859052600c60248201526b2737ba103137b93937bbb2b960a11b6044820152606490fd5b5080fd5b83823461087a578160031936011261087a576020906008549051908152f35b5090346101ac5760203660031901126101ac57359160028310156108cf57506108c7602092611f0a565b549051908152f35b80fd5b5082346108cf5760203660031901126108cf57506108f260209235612150565b9051908152f35b5090346101ac5760203660031901126101ac57359160028310156108cf57506108c7602092611f23565b5090346101ac5760203660031901126101ac57359160028310156108cf57506108c7602092611f3c565b83823461087a578160031936011261087a57905490516001600160a01b039091168152602090f35b5090346101ac57610b89916109ad61098c36611eb7565b9190938284519160209383674a12d6a8b0a5ea098680960152848152611f8e565b6109c78651672cf3be71a983745e85820152848152611f8e565b6109e1865167ef715a0f0408790c85820152848152611f8e565b6109fb8651677eb3897de8e28a2085820152848152611f8e565b610a15865167564fbb95a7e4204985820152848152611f8e565b6001600160a01b03610a3381610a2a8a611edb565b54161515611fe2565b610a4d875167afe8bd9e2103b5c186820152858152611f8e565b610a67875167dba5dcd65d0eb79a86820152858152611f8e565b610a81875167082ec88facc9b68b86820152858152611f8e565b610a9b875167f498cb3795c4712186820152858152611f8e565b610aa361205f565b610abd875167a38079014021c6af86820152858152611f8e565b610ad78751672300a63f2e70a5e086820152858152611f8e565b610adf612080565b610af9875167d1f0009c6f681ee586820152858152611f8e565b610b138751675e48c67ba7e9965286820152858152611f8e565b610b2d875167344aa2c38a26688386820152858152611f8e565b610b4787516786def3005b137fcf86820152858152611f8e565b610b5088611edb565b5487516323b872dd60e01b815233938101938452306020850152604084019490945292988993919091169183918b918391606090910190565b03925af1948515610c57577f45e0aea4a17277b64064452117dc96b0f5dc5168299410f63a96afc135fb6f4b9495610c3a575b50610bd78351679149fe75c73f0cb783820152828152611f8e565b610be085611f23565b610beb83825461203c565b9055610c07835167f7fedc76259479eb83820152828152611f8e565b610c21835167f3f14697a0f52b6483820152828152611f8e565b610c2d83518096611f55565b8401523392a26001805580f35b610c5090823d8411610803576107f48183611fc0565b5038610bbc565b83513d88823e3d90fd5b83823461087a578160031936011261087a5780610d78915190610c95602092679961be74a30e046b84820152838152611f8e565b610c9d611f62565b610cb781516765d0fe860362884884820152838152611f8e565b610cd1815167267f3c210a1b7e4084820152838152611f8e565b610ceb815167645a92e2a882daaa84820152838152611f8e565b610d058151673a3ce85c94e79b2184820152838152611f8e565b610d0d61205f565b835460ff60a01b1916600160a01b17845580513381527f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258908390a1610d6281516762a82a2b471e200184820152838152611f8e565b5190677239af4b11a36e5a818301528152611f8e565b337fb8fad2fa0ed7a383e747c309ef2c4391d7b65592a48893e57ccc1fab707914568280a280f35b83823461087a578160031936011261087a57602090516301e133808152f35b83346108cf57806003193601126108cf57610dd8611f62565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5090346101ac5760203660031901126101ac573560028110156101ac57602092506001600160a01b0390610e4c90611edb565b54169051908152f35b83823461087a578160031936011261087a5760ff6020925460a01c1690519015158152f35b5082903461087a57608036600319011261087a5782359060ff82168092036101ac5760249081359160443593600285101561153f5760643591835194610ed16020966758542630c1d3602a88820152878152611f8e565b610eeb8551672cf3be71a983745e88820152878152611f8e565b610f05855167ef715a0f0408790c88820152878152611f8e565b610f1f8551677eb3897de8e28a2088820152878152611f8e565b610f39855167564fbb95a7e4204988820152878152611f8e565b6001600160a01b0392610f4f84610a2a8a611edb565b610f69865167afe8bd9e2103b5c189820152888152611f8e565b610f83865167dba5dcd65d0eb79a89820152888152611f8e565b610f9d86516767c1da8dfb4cbfb189820152888152611f8e565b610fb786516766d2a7a99aeecac289820152888152611f8e565b610fbf61205f565b610fd9865167d40915f1129aa30c89820152888152611f8e565b610ff38651677b207a2f20bac91989820152888152611f8e565b610ffb612080565b61101586516771d2a1080f33326689820152888152611f8e565b61102f8651672d053810d87148bf89820152888152611f8e565b6110498651678af015a42bfef5b489820152888152611f8e565b611063865167fb4b29830fded41789820152888152611f8e565b61107d8651679c2d52147d498b2089820152888152611f8e565b6110928561108a8a611f23565b5410156120a3565b6110ac865167067bf21d66dec98089820152888152611f8e565b6110c6865167b5e81d5c752ac37f89820152888152611f8e565b6110e086516729913c8453e0de5f89820152888152611f8e565b8360095416803b156114fd57898260448d838b519586948593636f24b7b760e01b8552840152888a8401525af1801561150857611512575b50611133865167bfe32ce4e052b7e089820152888152611f8e565b61114d8651679fb6637efba36b2689820152888152611f8e565b6111678651670674f8b0a29b6d3289820152888152611f8e565b8360095416878b85895180948193639ce625f760e01b835233908301525afa8015611508578a906114d5575b612710915010611493576111b7865167d9360dbd21f31c2289820152888152611f8e565b6111d1865167a4550599a2f1500f89820152888152611f8e565b60085460001981146114815760010190816008556111ff875167d862d5c5b3c030228a820152898152611f8e565b865192610100840184811067ffffffffffffffff82111761146d579189918c969594938a5233855282850191825289850190815260608501908c825260808601928a8452898c8a600760a08b0198828a5260c08c019a428c5260e08d019e8f528352522097511687549160ff60a01b905160a01b16916affffffffffffffffffffff60a81b161717865551600186015560028501905195600287101561145c57508a97948997946113af9e9f979460ff9460069486199787898354169116179055516003840155518883015551600582015501925115159183541691161790556112f986516722840be6b4737c8e86820152858152611f8e565b61130288611f23565b61130d8482546120ef565b905561132986516752be86df63ce8b2186820152858152611f8e565b61133288611f3c565b61133d84825461203c565b905561135986516768084b70b0674eae86820152858152611f8e565b611373865167c2a103b2d185ef6e86820152858152611f8e565b61137c88611edb565b54865163a9059cbb60e01b815233938101938452602084019490945292988993919091169183918b918391604090910190565b03925af1948515611452577fbefbbb24b09ae81ba2c8946ab9b03ed0fd61017f94d9ebdcf669fd919e2cc103939495611435575b506113fe8251671acb8c2a649e4b7a86820152858152611f8e565b6114188251673b91676b935dabc086820152858152611f8e565b6008549361142883518097611f55565b8501523393a36001805580f35b61144b90853d8711610803576107f48183611fc0565b50866113e3565b82513d88823e3d90fd5b634e487b7160e01b8e5260218f528dfd5b8560418e634e487b7160e01b600052526000fd5b634e487b7160e01b8a5260118b52838afd5b855162461bcd60e51b8152808b018890526017818501527f496e73756666696369656e7420636f6c6c61746572616c0000000000000000006044820152606490fd5b508781813d8311611501575b6114eb8183611fc0565b810103126114fd576127109051611193565b8980fd5b503d6114e1565b87513d8c823e3d90fd5b67ffffffffffffffff819a929a1161152d578652978a611118565b634e487b7160e01b825260418b528382fd5b8580fd5b50346101ac5760209081600319360112611832578235926115748251672e8f498d9199c72f85820152848152611f8e565b61157c61205f565b6115968251673f9d3185a868709385820152848152611f8e565b6115af825166b08fcdd5ced39885820152848152611f8e565b6115b7612080565b6115d18251675bdbb1f81a9f522d85820152848152611f8e565b6115eb8251678c4977b9efeee63885820152848152611f8e565b611605825167bd6984e3d6da198b85820152848152611f8e565b61161f8251676c162106ace8223985820152848152611f8e565b83855260078352818520611643835167a69b532726c3b51486820152858152611f8e565b61165d83516708edfaaa278e98c686820152858152611f8e565b6116778351670d157bdee585fa8c86820152858152611f8e565b600681019182549161168c60ff8416156120fc565b6116a685516710256b5beec2187188820152878152611f8e565b6116c08551670ebeff1f65dfedbf88820152878152611f8e565b6116da855167bb5905404bd85ad088820152878152611f8e565b6116f4855167d40efc55c990fa3d88820152878152611f8e565b600954905485516351d9fb0360e11b81526001600160a01b039182168482015291879183916024918391165afa90811561182857889161180b575b50156117d5575090600183926117596117aa96955167a65501191f5c0adc87820152868152611f8e565b61177384516713b5fe427b09282087820152868152611f8e565b60ff1916179055611794815167e38412349079a3e284820152838152611f8e565b5190674103c6b0922c49a5818301528152611f8e565b7faf91ffe368225045d42f7c2b4b90feb438133ac1e375e73bc9066652b70a1d778280a26001805580f35b835162461bcd60e51b8152908101859052601060248201526f4e6f74206c6971756964617461626c6560801b6044820152606490fd5b6118229150863d8811610803576107f48183611fc0565b3861172f565b85513d8a823e3d90fd5b8380fd5b5082903461087a578160031936011261087a5780519061186760209267cc0081c8bd7fc49484820152838152611f8e565b61186f611f62565b611889815167523fb4badee7e31384820152838152611f8e565b6118a381516782c0cc5dc0db433084820152838152611f8e565b6118bd815167d60c5ae3620b07ee84820152838152611f8e565b6118d78151671bf3af6ee7078db284820152838152611f8e565b825460ff8160a01c16156119735761194b93945060ff60a01b191684557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa828251338152a16119368151677cc53dd09698ba1584820152838152611f8e565b5190662f9848aba5f390818301528152611f8e565b337ff5cbf596165cc457b2cd92e8d8450827ee314968160a5696402d75766fc52caf8280a280f35b8151638dfc202b60e01b81528590fd5b5090346101ac57611c2d916119bb61199a36611eb7565b919093828451916020938367c386793b927f9e028680960152848152611f8e565b6119d58651672cf3be71a983745e85820152848152611f8e565b6119ef865167ef715a0f0408790c85820152848152611f8e565b611a098651677eb3897de8e28a2085820152848152611f8e565b611a23865167564fbb95a7e4204985820152848152611f8e565b6001600160a01b03611a3881610a2a8a611edb565b611a52875167afe8bd9e2103b5c186820152858152611f8e565b611a6c875167dba5dcd65d0eb79a86820152858152611f8e565b611a868751678580c7c01394ba4386820152858152611f8e565b611aa0875167301a20c3f9db715386820152858152611f8e565b611aa861205f565b611ac28751671e89ef0be3e11aae86820152858152611f8e565b611adc8751676fba1905f245a71986820152858152611f8e565b611ae4612080565b611afe8751677cefb340093f648f86820152858152611f8e565b611b18875167f821e74c6d75121c86820152858152611f8e565b611b3287516760248faef363d13186820152858152611f8e565b611b4c875167c0cf3c312da5c58f86820152858152611f8e565b611b6687516755e0753cc4ea357486820152858152611f8e565b611b738361108a8a611f23565b611b8d87516702283c0c43eee5a286820152858152611f8e565b611ba7875167c275c00b3791719f86820152858152611f8e565b611bb088611f23565b611bbb8482546120ef565b9055611bd78751675aeadc4298096fdf86820152858152611f8e565b611bf187516778f120a1b5df064c86820152858152611f8e565b611bfa88611edb565b54875163a9059cbb60e01b815233938101938452602084019490945292988993919091169183918b918391604090910190565b03925af1948515610c57577f874a4f7fdaaba20eae6bb1ba887312283553def55119d3a2bc9ff4de0adeda569495611c95575b50611c7b835167ae7e499810a1092e83820152828152611f8e565b610c21835167d1fbc813efa366cd83820152828152611f8e565b611cab90823d8411610803576107f48183611fc0565b5038611c60565b83823461087a578160031936011261087a5760095490516001600160a01b039091168152602090f35b925050346101ac577fff0857736f1141d406b4110acf3def1d6ed605288f4294399c6423809bdaca9b91611d0e36611eb7565b9091611d2b60209167f239a4ea4570d22c83820152828152611f8e565b611d33611f62565b611d4d84516722e6a9021a4f29b083820152828152611f8e565b611d67845167dfd6aff9c86c574783820152828152611f8e565b611d818451672cf3be71a983745e83820152828152611f8e565b611d9b845167ef715a0f0408790c83820152828152611f8e565b611db58451677eb3897de8e28a2083820152828152611f8e565b611dcf845167564fbb95a7e4204983820152828152611f8e565b611de36001600160a01b03610a2a85611edb565b611dfd845167afe8bd9e2103b5c183820152828152611f8e565b611e17845167dba5dcd65d0eb79a83820152828152611f8e565b611e3184516758cc1dc1d0be2adc83820152828152611f8e565b611e4b845167252bcef27da9489983820152828152611f8e565b611e65845167f3211654ede5006f83820152828152611f8e565b81611e6f84611f0a565b55611e8a8451671b5ec5256868474683820152828152611f8e565b611ea48451671bdc3c343c82969d83820152828152611f8e565b611eb084518094611f55565b820152a180f35b6040906003190112611ed6576004356002811015611ed6579060243590565b600080fd5b6002811015611ef4576000526002602052604060002090565b634e487b7160e01b600052602160045260246000fd5b6002811015611ef4576000526005602052604060002090565b6002811015611ef4576000526003602052604060002090565b6002811015611ef4576000526004602052604060002090565b906002821015611ef45752565b6000546001600160a01b03163303611f7657565b60405163118cdaa760e01b8152336004820152602490fd5b6040810190811067ffffffffffffffff821117611faa57604052565b634e487b7160e01b600052604160045260246000fd5b90601f8019910116810190811067ffffffffffffffff821117611faa57604052565b15611fe957565b60405162461bcd60e51b8152602060048201526013602482015272105cdcd95d081b9bdd081cdd5c1c1bdc9d1959606a1b6044820152606490fd5b90816020910312611ed657518015158103611ed65790565b9190820180921161204957565b634e487b7160e01b600052601160045260246000fd5b60ff60005460a01c1661206e57565b60405163d93c066560e01b8152600490fd5b600260015414612091576002600155565b604051633ee5aeb560e01b8152600490fd5b156120aa57565b60405162461bcd60e51b815260206004820152601b60248201527f496e73756666696369656e7420706f6f6c206c697175696469747900000000006044820152606490fd5b9190820391821161204957565b1561210357565b60405162461bcd60e51b8152602060048201526012602482015271105b1c9958591e481b1a5c5d5a59185d195960721b6044820152606490fd5b8181029291811591840414171561204957565b61228764496cebb8009161228260409182519061217e602092671f4e840bd790e53c84820152838152611f8e565b61219884516797aa1d3427c9358e84820152838152611f8e565b6121b28451678fd1dec5ab95c48984820152838152611f8e565b600052600781526003836000206121d98551671bc40f579f28b57d85820152848152611f8e565b6121f3855167f81413732d1b2b7085820152848152611f8e565b61227b61220660ff600284015416611f0a565b5493612222875167a0c71a801633d3d583820152828152611f8e565b61223c875167c5b8e6ca57c6c4e283820152828152611f8e565b61224a6005840154426120ef565b9661226581516756616d5fdea4e86284820152838152611f8e565b5190674866bceaf2b2e096818301528152611f8e565b015461213d565b61213d565b049056fea2646970667358221220c6461ae8f2663365262e0521f5082f529139bc59c37bd534cf183e590ec47b9964736f6c63430008140033";

type LendingPoolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LendingPoolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LendingPool__factory extends ContractFactory {
  constructor(...args: LendingPoolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    usdc: AddressLike,
    wavax: AddressLike,
    _collateralManager: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      usdc,
      wavax,
      _collateralManager,
      overrides || {}
    );
  }
  override deploy(
    usdc: AddressLike,
    wavax: AddressLike,
    _collateralManager: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      usdc,
      wavax,
      _collateralManager,
      overrides || {}
    ) as Promise<
      LendingPool & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): LendingPool__factory {
    return super.connect(runner) as LendingPool__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LendingPoolInterface {
    return new Interface(_abi) as LendingPoolInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): LendingPool {
    return new Contract(address, _abi, runner) as unknown as LendingPool;
  }
}
