/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  BastionProtocol,
  BastionProtocolInterface,
} from "../../contracts/BastionProtocol";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "destinationChain",
        type: "uint256",
      },
    ],
    name: "CrossChainTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "AVALANCHE_CHAIN_ID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "addSupportedToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "getUserBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "removeSupportedToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "supportedTokens",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalValueLocked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userBalances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608080604052346100cf576000906001825533156100bb575060018054336001600160a01b0319821681179092556040519291906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a3735425890298aed601595a70ab815c96711a31bc6581526003602052600160408083209260ff1993838582541617905573d00ae08403b9bbb9124bb305c09058e32c39a48c8152209182541617905561074890816100d58239f35b602491631e4fbdf760e01b82526004820152fd5b600080fdfe6040608081526004908136101561001557600080fd5b600090813560e01c806347e7ef241461045b5780636805d6ad146102b157806368c4ac261461041e5780636a98f78c146104025780636d69fcaf146103c0578063715018a61461036057806376319190146103215780638da5cb5b146102f9578063adb51980146102b1578063ec18154e14610293578063f2fde38b146101ff5763f3fef3a3146100a557600080fd5b346101fb57806003193601126101fb576100bd61056c565b602435906100c96106e2565b60018060a01b031691828452602090600382526100eb60ff82872054166105c9565b6100f683151561060b565b3385526002825280852084865282528281862054106101c15733855260028252808520848652825280852061012c848254610705565b9055610139838754610705565b8655805163a9059cbb60e01b83820152336024820152604480820185905281526080810167ffffffffffffffff8111828210176101ae5782916101a0917f9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb9594528661067a565b519283523392a36001815580f35b634e487b7160e01b875260418852602487fd5b5162461bcd60e51b8152808601919091526014602482015273496e73756666696369656e742062616c616e636560601b6044820152606490fd5b5080fd5b50823461028f57602036600319011261028f5761021a61056c565b9061022361059d565b6001600160a01b03918216928315610279575050600154826bffffffffffffffffffffffff60a01b821617600155167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8280fd5b50823461028f578260031936011261028f5760209250549051908152f35b50346101fb57806003193601126101fb57806020926102ce61056c565b6102d6610587565b6001600160a01b0391821683526002865283832091168252845220549051908152f35b50346101fb57816003193601126101fb5760015490516001600160a01b039091168152602090f35b50346101fb5760203660031901126101fb5761033b61056c565b61034361059d565b6001600160a01b0316825260036020528120805460ff1916905580f35b82346103bd57806003193601126103bd5761037961059d565b600180546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b80fd5b50346101fb5760203660031901126101fb576103da61056c565b6103e261059d565b6001600160a01b0316825260036020528120805460ff1916600117905580f35b50346101fb57816003193601126101fb576020905161a8698152f35b50346101fb5760203660031901126101fb5760209160ff9082906001600160a01b0361044861056c565b1681526003855220541690519015158152f35b5082903461028f578060031936011261028f5761047661056c565b90602435916104836106e2565b6001600160a01b03168085526003602052818520549093906104a79060ff166105c9565b6104b283151561060b565b81516323b872dd60e01b60208201523360248201523060448201526064808201859052815260a0810167ffffffffffffffff8111828210176105595783526104fa908561067a565b3385526002602052818520848652602052818520610519848254610657565b9055610526838254610657565b9055519081527f5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f6260203392a36001815580f35b634e487b7160e01b875260418352602487fd5b600435906001600160a01b038216820361058257565b600080fd5b602435906001600160a01b038216820361058257565b6001546001600160a01b031633036105b157565b60405163118cdaa760e01b8152336004820152602490fd5b156105d057565b60405162461bcd60e51b8152602060048201526013602482015272151bdad95b881b9bdd081cdd5c1c1bdc9d1959606a1b6044820152606490fd5b1561061257565b60405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e20300000006044820152606490fd5b9190820180921161066457565b634e487b7160e01b600052601160045260246000fd5b906000602091828151910182855af1156106d6576000513d6106cd57506001600160a01b0381163b155b6106ab5750565b604051635274afe760e01b81526001600160a01b039091166004820152602490fd5b600114156106a4565b6040513d6000823e3d90fd5b6002600054146106f3576002600055565b604051633ee5aeb560e01b8152600490fd5b919082039182116106645756fea264697066735822122074858603d5cfad3694a85614f726dbb8368075996bc8f12625b81dac70e2160164736f6c63430008140033";

type BastionProtocolConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BastionProtocolConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BastionProtocol__factory extends ContractFactory {
  constructor(...args: BastionProtocolConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      BastionProtocol & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BastionProtocol__factory {
    return super.connect(runner) as BastionProtocol__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BastionProtocolInterface {
    return new Interface(_abi) as BastionProtocolInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): BastionProtocol {
    return new Contract(address, _abi, runner) as unknown as BastionProtocol;
  }
}
